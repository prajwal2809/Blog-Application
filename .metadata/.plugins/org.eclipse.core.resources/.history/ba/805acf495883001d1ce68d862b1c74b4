package com.prajwal.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.prajwal.entity.Post;
import com.prajwal.entity.Comment;
import com.prajwal.service.PostService;

@Controller
public class PostController {
	@Autowired
	private PostService postService;
	
	@RequestMapping("/")
	public String listPosts(Model theModel) {
		
		List<Post> thePosts=postService.getPosts();
		theModel.addAttribute("posts", thePosts);
	
		return "list-posts";
				
	}
	@GetMapping("/newpost")
	public String showNewEditPost(Model theModel) {
		
		Post thePost=new Post();
		theModel.addAttribute("post", thePost);

		return "newedit-form";
	}
	 
	@PostMapping("/savePost")
	public String savePost(@ModelAttribute("post") Post thePost,@RequestParam("id") int id,@RequestParam("publish") String submitType ) {
		
		postService.savePost(thePost,id,submitType);
		 
		return "redirect:/";
	}
	@GetMapping("/showPost")
	public String showPost(@RequestParam("postId") int theID,Model theModel) {

		Post post = postService.showPost(theID);
		theModel.addAttribute("post", post);
		return "show-post";
	}
	@RequestMapping("/updatePost")
	public String updatePost(@RequestParam("postId") int theID,Model theModel) {;
		
		
		theModel.addAttribute(postService.showPost(theID));
	
		return "newedit-form";
	}
	@RequestMapping("/deletePost")
	public String deletePost(@RequestParam("postId") int theID,Model theModel) {
		postService.deletePost(theID);
		return "redirect:/";
	}
	
	@RequestMapping("/createPost")
	public String createPost(Model theModel) {
		theModel.addAttribute("post",new Post());
		return "newedit-form";
	}
	@RequestMapping("/addComment")
	public String addComment(Comment comment,@RequestParam("id") int id,Model model) {

		postService.addComment(comment, id);
		model.addAttribute("comments",showComment(comment.getPost().getId()));
        Post post=postService.showPost(id);  
        model.addAttribute("post",post);
        return "show-post";
		
	}
	@RequestMapping("/showComment")
	public String showComment(int id){
		postService.showComment(id);
		
		return "show-post";
		
	}
	
//	public String 
//	
//	
//	@PostMapping("/updatePost")
//	public String updatePost() {
//		
//	}
}
